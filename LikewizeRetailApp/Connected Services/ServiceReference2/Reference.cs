//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LikewizeRetailApp.ServiceReference2 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ReturnStatus", Namespace="http://schemas.datacontract.org/2004/07/Brightstar.SNS.Entities")]
    [System.SerializableAttribute()]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(string[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(LikewizeRetailApp.ServiceReference2.SwappingSerials[]))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(LikewizeRetailApp.ServiceReference2.SwappingSerials))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(LikewizeRetailApp.ServiceReference2.SNSMST))]
    [System.Runtime.Serialization.KnownTypeAttribute(typeof(LikewizeRetailApp.ServiceReference2.SCReturnStatus))]
    public partial class ReturnStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InnerExceptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private object ReturnDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ReturnValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isSuccessfulField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InnerException {
            get {
                return this.InnerExceptionField;
            }
            set {
                if ((object.ReferenceEquals(this.InnerExceptionField, value) != true)) {
                    this.InnerExceptionField = value;
                    this.RaisePropertyChanged("InnerException");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Message {
            get {
                return this.MessageField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageField, value) != true)) {
                    this.MessageField = value;
                    this.RaisePropertyChanged("Message");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public object ReturnData {
            get {
                return this.ReturnDataField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnDataField, value) != true)) {
                    this.ReturnDataField = value;
                    this.RaisePropertyChanged("ReturnData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ReturnValue {
            get {
                return this.ReturnValueField;
            }
            set {
                if ((this.ReturnValueField.Equals(value) != true)) {
                    this.ReturnValueField = value;
                    this.RaisePropertyChanged("ReturnValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isSuccessful {
            get {
                return this.isSuccessfulField;
            }
            set {
                if ((this.isSuccessfulField.Equals(value) != true)) {
                    this.isSuccessfulField = value;
                    this.RaisePropertyChanged("isSuccessful");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SwappingSerials", Namespace="http://schemas.datacontract.org/2004/07/Brightstar.SNS.BusinessLayer")]
    [System.SerializableAttribute()]
    public partial class SwappingSerials : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ExistingSerialField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewCpnyIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewInvtIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NewSerialField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ExistingSerial {
            get {
                return this.ExistingSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.ExistingSerialField, value) != true)) {
                    this.ExistingSerialField = value;
                    this.RaisePropertyChanged("ExistingSerial");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewCpnyID {
            get {
                return this.NewCpnyIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NewCpnyIDField, value) != true)) {
                    this.NewCpnyIDField = value;
                    this.RaisePropertyChanged("NewCpnyID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewInvtID {
            get {
                return this.NewInvtIDField;
            }
            set {
                if ((object.ReferenceEquals(this.NewInvtIDField, value) != true)) {
                    this.NewInvtIDField = value;
                    this.RaisePropertyChanged("NewInvtID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string NewSerial {
            get {
                return this.NewSerialField;
            }
            set {
                if ((object.ReferenceEquals(this.NewSerialField, value) != true)) {
                    this.NewSerialField = value;
                    this.RaisePropertyChanged("NewSerial");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SNSMST", Namespace="http://schemas.datacontract.org/2004/07/Brightstar.SNS.Entities")]
    [System.SerializableAttribute()]
    public partial class SNSMST : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DONumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InventoryIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime TranDateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DONumber {
            get {
                return this.DONumberField;
            }
            set {
                if ((object.ReferenceEquals(this.DONumberField, value) != true)) {
                    this.DONumberField = value;
                    this.RaisePropertyChanged("DONumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string InventoryID {
            get {
                return this.InventoryIDField;
            }
            set {
                if ((object.ReferenceEquals(this.InventoryIDField, value) != true)) {
                    this.InventoryIDField = value;
                    this.RaisePropertyChanged("InventoryID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime TranDate {
            get {
                return this.TranDateField;
            }
            set {
                if ((this.TranDateField.Equals(value) != true)) {
                    this.TranDateField = value;
                    this.RaisePropertyChanged("TranDate");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SCReturnStatus", Namespace="http://schemas.datacontract.org/2004/07/Brightstar.SNS.Entities")]
    [System.SerializableAttribute()]
    public partial class SCReturnStatus : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidIMEI1Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidIMEI2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsValidSKUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private LikewizeRetailApp.ServiceReference2.ReturnStatus ReturnStatusField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValidIMEI1 {
            get {
                return this.IsValidIMEI1Field;
            }
            set {
                if ((this.IsValidIMEI1Field.Equals(value) != true)) {
                    this.IsValidIMEI1Field = value;
                    this.RaisePropertyChanged("IsValidIMEI1");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValidIMEI2 {
            get {
                return this.IsValidIMEI2Field;
            }
            set {
                if ((this.IsValidIMEI2Field.Equals(value) != true)) {
                    this.IsValidIMEI2Field = value;
                    this.RaisePropertyChanged("IsValidIMEI2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsValidSKU {
            get {
                return this.IsValidSKUField;
            }
            set {
                if ((this.IsValidSKUField.Equals(value) != true)) {
                    this.IsValidSKUField = value;
                    this.RaisePropertyChanged("IsValidSKU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public LikewizeRetailApp.ServiceReference2.ReturnStatus ReturnStatus {
            get {
                return this.ReturnStatusField;
            }
            set {
                if ((object.ReferenceEquals(this.ReturnStatusField, value) != true)) {
                    this.ReturnStatusField = value;
                    this.RaisePropertyChanged("ReturnStatus");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference2.ISnsServices")]
    public interface ISnsServices {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_PRODUCT", ReplyAction="http://tempuri.org/ISnsServices/MD_PRODUCTResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MD_PRODUCT(string cpnyId, string invtId, string descr, string prodclassid, bool serialized, bool serializedIn, bool serializedOut, string upcCode, string serialmask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_PRODUCT", ReplyAction="http://tempuri.org/ISnsServices/MD_PRODUCTResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_PRODUCTAsync(string cpnyId, string invtId, string descr, string prodclassid, bool serialized, bool serializedIn, bool serializedOut, string upcCode, string serialmask);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_PRODUCT_DELETE", ReplyAction="http://tempuri.org/ISnsServices/MD_PRODUCT_DELETEResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MD_PRODUCT_DELETE(string cpnyId, string invtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_PRODUCT_DELETE", ReplyAction="http://tempuri.org/ISnsServices/MD_PRODUCT_DELETEResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_PRODUCT_DELETEAsync(string cpnyId, string invtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_ITEMGROUP_DELETE", ReplyAction="http://tempuri.org/ISnsServices/MD_ITEMGROUP_DELETEResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MD_ITEMGROUP_DELETE(string cpnyId, string prodclassid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_ITEMGROUP_DELETE", ReplyAction="http://tempuri.org/ISnsServices/MD_ITEMGROUP_DELETEResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_ITEMGROUP_DELETEAsync(string cpnyId, string prodclassid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_WAREHOUSE_DELETE", ReplyAction="http://tempuri.org/ISnsServices/MD_WAREHOUSE_DELETEResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MD_WAREHOUSE_DELETE(string cpnyId, string siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_WAREHOUSE_DELETE", ReplyAction="http://tempuri.org/ISnsServices/MD_WAREHOUSE_DELETEResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_WAREHOUSE_DELETEAsync(string cpnyId, string siteId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_BOM_HEADER", ReplyAction="http://tempuri.org/ISnsServices/MD_BOM_HEADERResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MD_BOM_HEADER(string cpnyId, string bomid, string descr, string finishGood);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_BOM_HEADER", ReplyAction="http://tempuri.org/ISnsServices/MD_BOM_HEADERResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_BOM_HEADERAsync(string cpnyId, string bomid, string descr, string finishGood);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_BOM_DETAIL", ReplyAction="http://tempuri.org/ISnsServices/MD_BOM_DETAILResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MD_BOM_DETAIL(string cpnyId, string bomid, string finishGood, decimal lineNbr, string componentId, decimal qty, decimal perseries, long bomRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_BOM_DETAIL", ReplyAction="http://tempuri.org/ISnsServices/MD_BOM_DETAILResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_BOM_DETAILAsync(string cpnyId, string bomid, string finishGood, decimal lineNbr, string componentId, decimal qty, decimal perseries, long bomRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_BOM_DETAIL_DELETE", ReplyAction="http://tempuri.org/ISnsServices/MD_BOM_DETAIL_DELETEResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MD_BOM_DETAIL_DELETE(string cpnyId, string bomid, string finishGood, decimal lineNbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_BOM_DETAIL_DELETE", ReplyAction="http://tempuri.org/ISnsServices/MD_BOM_DETAIL_DELETEResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_BOM_DETAIL_DELETEAsync(string cpnyId, string bomid, string finishGood, decimal lineNbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_ITEMGROUP", ReplyAction="http://tempuri.org/ISnsServices/MD_ITEMGROUPResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MD_ITEMGROUP(string cpnyId, string prodClassId, string descr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_ITEMGROUP", ReplyAction="http://tempuri.org/ISnsServices/MD_ITEMGROUPResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_ITEMGROUPAsync(string cpnyId, string prodClassId, string descr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_WAREHOUSE", ReplyAction="http://tempuri.org/ISnsServices/MD_WAREHOUSEResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MD_WAREHOUSE(string cpnyId, string erpsiteid, string siteId, string descr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_WAREHOUSE", ReplyAction="http://tempuri.org/ISnsServices/MD_WAREHOUSEResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_WAREHOUSEAsync(string cpnyId, string erpsiteid, string siteId, string descr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/CREATE_PRODUCTION_ORDER_HEADER", ReplyAction="http://tempuri.org/ISnsServices/CREATE_PRODUCTION_ORDER_HEADERResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus CREATE_PRODUCTION_ORDER_HEADER(string cpnyId, string woNumber, string finishGood, string bomId, string siteFinish, string warehouse, string whselocFinish, string systemId, System.Nullable<int> qty, string refNbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/CREATE_PRODUCTION_ORDER_HEADER", ReplyAction="http://tempuri.org/ISnsServices/CREATE_PRODUCTION_ORDER_HEADERResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> CREATE_PRODUCTION_ORDER_HEADERAsync(string cpnyId, string woNumber, string finishGood, string bomId, string siteFinish, string warehouse, string whselocFinish, string systemId, System.Nullable<int> qty, string refNbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/CREATE_PRODUCTION_ORDER_DETAIL", ReplyAction="http://tempuri.org/ISnsServices/CREATE_PRODUCTION_ORDER_DETAILResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus CREATE_PRODUCTION_ORDER_DETAIL(string cpnyId, string woNumber, string lotId, string invtId, decimal lineNbr, decimal qty, string bomId, decimal perseries, long bomRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/CREATE_PRODUCTION_ORDER_DETAIL", ReplyAction="http://tempuri.org/ISnsServices/CREATE_PRODUCTION_ORDER_DETAILResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> CREATE_PRODUCTION_ORDER_DETAILAsync(string cpnyId, string woNumber, string lotId, string invtId, decimal lineNbr, decimal qty, string bomId, decimal perseries, long bomRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/CREATE_PRODUCTION_ORDER_DETAIL_NOBOMRECID", ReplyAction="http://tempuri.org/ISnsServices/CREATE_PRODUCTION_ORDER_DETAIL_NOBOMRECIDResponse" +
            "")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus CREATE_PRODUCTION_ORDER_DETAIL_NOBOMRECID(string cpnyId, string woNumber, string lotId, string invtId, decimal lineNbr, decimal qty, string bomId, decimal perseries, long bomRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/CREATE_PRODUCTION_ORDER_DETAIL_NOBOMRECID", ReplyAction="http://tempuri.org/ISnsServices/CREATE_PRODUCTION_ORDER_DETAIL_NOBOMRECIDResponse" +
            "")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> CREATE_PRODUCTION_ORDER_DETAIL_NOBOMRECIDAsync(string cpnyId, string woNumber, string lotId, string invtId, decimal lineNbr, decimal qty, string bomId, decimal perseries, long bomRecId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/DELETE_LINE_SERIALNBR", ReplyAction="http://tempuri.org/ISnsServices/DELETE_LINE_SERIALNBRResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus DELETE_LINE_SERIALNBR(string cpnyid, string docnbr, string trantype, string refnbr, string lineref, string invtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/DELETE_LINE_SERIALNBR", ReplyAction="http://tempuri.org/ISnsServices/DELETE_LINE_SERIALNBRResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> DELETE_LINE_SERIALNBRAsync(string cpnyid, string docnbr, string trantype, string refnbr, string lineref, string invtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/VERIFY_LINE", ReplyAction="http://tempuri.org/ISnsServices/VERIFY_LINEResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus VERIFY_LINE(string cpnyid, string docnbr, string trantype, string refnbr, string lineref, string invtId, string siteId, string warehouse, string whseloc, string system, string tositeid, string towarehouse, string towhseloc, decimal qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/VERIFY_LINE", ReplyAction="http://tempuri.org/ISnsServices/VERIFY_LINEResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> VERIFY_LINEAsync(string cpnyid, string docnbr, string trantype, string refnbr, string lineref, string invtId, string siteId, string warehouse, string whseloc, string system, string tositeid, string towarehouse, string towhseloc, decimal qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/CANCEL_PORcpt", ReplyAction="http://tempuri.org/ISnsServices/CANCEL_PORcptResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus CANCEL_PORcpt(string cpnyid, string docnbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/CANCEL_PORcpt", ReplyAction="http://tempuri.org/ISnsServices/CANCEL_PORcptResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> CANCEL_PORcptAsync(string cpnyid, string docnbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/VERIFY_PORcpt", ReplyAction="http://tempuri.org/ISnsServices/VERIFY_PORcptResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus VERIFY_PORcpt(string cpnyid, string docnbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/VERIFY_PORcpt", ReplyAction="http://tempuri.org/ISnsServices/VERIFY_PORcptResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> VERIFY_PORcptAsync(string cpnyid, string docnbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/POSTED_TRANSACTION", ReplyAction="http://tempuri.org/ISnsServices/POSTED_TRANSACTIONResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus POSTED_TRANSACTION(string cpnyid, string docnbr, string trantype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/POSTED_TRANSACTION", ReplyAction="http://tempuri.org/ISnsServices/POSTED_TRANSACTIONResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> POSTED_TRANSACTIONAsync(string cpnyid, string docnbr, string trantype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/VERIFY_QTYTOT", ReplyAction="http://tempuri.org/ISnsServices/VERIFY_QTYTOTResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus VERIFY_QTYTOT(string cpnyid, string docnbr, string trantype, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/VERIFY_QTYTOT", ReplyAction="http://tempuri.org/ISnsServices/VERIFY_QTYTOTResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> VERIFY_QTYTOTAsync(string cpnyid, string docnbr, string trantype, int qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/InsertTransdetail", ReplyAction="http://tempuri.org/ISnsServices/InsertTransdetailResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus InsertTransdetail(
                    string cpnyId, 
                    string tranTypeId, 
                    string docNbr, 
                    string refNbr, 
                    string lineRef, 
                    string invtid, 
                    string siteid, 
                    string warehouse, 
                    string whseloc, 
                    System.Nullable<decimal> qtytot, 
                    System.Nullable<decimal> qty, 
                    string transtatus, 
                    string systemid, 
                    string tositeid, 
                    string towarehouse, 
                    string towhseloc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/InsertTransdetail", ReplyAction="http://tempuri.org/ISnsServices/InsertTransdetailResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> InsertTransdetailAsync(
                    string cpnyId, 
                    string tranTypeId, 
                    string docNbr, 
                    string refNbr, 
                    string lineRef, 
                    string invtid, 
                    string siteid, 
                    string warehouse, 
                    string whseloc, 
                    System.Nullable<decimal> qtytot, 
                    System.Nullable<decimal> qty, 
                    string transtatus, 
                    string systemid, 
                    string tositeid, 
                    string towarehouse, 
                    string towhseloc);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/Validate_Serial_Status", ReplyAction="http://tempuri.org/ISnsServices/Validate_Serial_StatusResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus Validate_Serial_Status(string cpnyId, string invtid, string lotsernbr, string siteid, string whseloc, string trantypeid, string tranbehaviour, System.Nullable<short> invtmult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/Validate_Serial_Status", ReplyAction="http://tempuri.org/ISnsServices/Validate_Serial_StatusResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> Validate_Serial_StatusAsync(string cpnyId, string invtid, string lotsernbr, string siteid, string whseloc, string trantypeid, string tranbehaviour, System.Nullable<short> invtmult);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/Sns_Wrk_Rescan", ReplyAction="http://tempuri.org/ISnsServices/Sns_Wrk_RescanResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus Sns_Wrk_Rescan(string cpnyId, string batNbrIn, string refNbrIn, string lineRefIn, string invtId, string wrksId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/Sns_Wrk_Rescan", ReplyAction="http://tempuri.org/ISnsServices/Sns_Wrk_RescanResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> Sns_Wrk_RescanAsync(string cpnyId, string batNbrIn, string refNbrIn, string lineRefIn, string invtId, string wrksId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/SNS_Wrk_IN_OUT_INS", ReplyAction="http://tempuri.org/ISnsServices/SNS_Wrk_IN_OUT_INSResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus SNS_Wrk_IN_OUT_INS(
                    string p_cpnyId, 
                    string p_InOutFlagIn, 
                    string p_ModuleIn, 
                    string p_TranTypeIn, 
                    string p_BatNbrIn, 
                    string p_RefNbrIn, 
                    string p_LineRefIn, 
                    string p_InvtIDIn, 
                    string p_LotSerNbrIn, 
                    string p_EntityIDIn, 
                    string p_MstBoxNbrIn, 
                    string p_LotSerNbrAlt1In, 
                    string p_LotSerNbrAlt2In, 
                    string p_LotSerNbrAlt3In, 
                    string p_LotSerNbrAlt4In, 
                    string p_LotSerNbrAlt5In, 
                    string p_LotSerNbrAlt6In, 
                    string p_LotSerNbrAlt7In, 
                    string p_LotSerNbrAlt8In, 
                    string p_LotSerNbrHexIn, 
                    string p_ComputerNameIn, 
                    string p_ScrnNbrIn, 
                    string p_UserIDIn, 
                    System.Nullable<short> p_AccessNbr, 
                    string p_SiteID, 
                    string p_Whseloc, 
                    string p_Pallet, 
                    int p_linenbr, 
                    string p_KitId, 
                    string p_WorkOrder, 
                    string p_MfgrLotSerNbr, 
                    System.Nullable<System.DateTime> P_ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/SNS_Wrk_IN_OUT_INS", ReplyAction="http://tempuri.org/ISnsServices/SNS_Wrk_IN_OUT_INSResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> SNS_Wrk_IN_OUT_INSAsync(
                    string p_cpnyId, 
                    string p_InOutFlagIn, 
                    string p_ModuleIn, 
                    string p_TranTypeIn, 
                    string p_BatNbrIn, 
                    string p_RefNbrIn, 
                    string p_LineRefIn, 
                    string p_InvtIDIn, 
                    string p_LotSerNbrIn, 
                    string p_EntityIDIn, 
                    string p_MstBoxNbrIn, 
                    string p_LotSerNbrAlt1In, 
                    string p_LotSerNbrAlt2In, 
                    string p_LotSerNbrAlt3In, 
                    string p_LotSerNbrAlt4In, 
                    string p_LotSerNbrAlt5In, 
                    string p_LotSerNbrAlt6In, 
                    string p_LotSerNbrAlt7In, 
                    string p_LotSerNbrAlt8In, 
                    string p_LotSerNbrHexIn, 
                    string p_ComputerNameIn, 
                    string p_ScrnNbrIn, 
                    string p_UserIDIn, 
                    System.Nullable<short> p_AccessNbr, 
                    string p_SiteID, 
                    string p_Whseloc, 
                    string p_Pallet, 
                    int p_linenbr, 
                    string p_KitId, 
                    string p_WorkOrder, 
                    string p_MfgrLotSerNbr, 
                    System.Nullable<System.DateTime> P_ExpDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/Sns_Transfer", ReplyAction="http://tempuri.org/ISnsServices/Sns_TransferResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus Sns_Transfer(string cpnyid, string transfer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/Sns_Transfer", ReplyAction="http://tempuri.org/ISnsServices/Sns_TransferResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> Sns_TransferAsync(string cpnyid, string transfer);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/XBS_SendChangeOfPartNbrReceiptToWarehouse", ReplyAction="http://tempuri.org/ISnsServices/XBS_SendChangeOfPartNbrReceiptToWarehouseResponse" +
            "")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus XBS_SendChangeOfPartNbrReceiptToWarehouse(string cpnyID, string journalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/XBS_SendChangeOfPartNbrReceiptToWarehouse", ReplyAction="http://tempuri.org/ISnsServices/XBS_SendChangeOfPartNbrReceiptToWarehouseResponse" +
            "")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> XBS_SendChangeOfPartNbrReceiptToWarehouseAsync(string cpnyID, string journalID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/GET_TRANPERWAREHOUSE", ReplyAction="http://tempuri.org/ISnsServices/GET_TRANPERWAREHOUSEResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus GET_TRANPERWAREHOUSE(string cpnyid, string trantypeid, string siteid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/GET_TRANPERWAREHOUSE", ReplyAction="http://tempuri.org/ISnsServices/GET_TRANPERWAREHOUSEResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> GET_TRANPERWAREHOUSEAsync(string cpnyid, string trantypeid, string siteid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/GET_LINE_SERIALNBR", ReplyAction="http://tempuri.org/ISnsServices/GET_LINE_SERIALNBRResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus GET_LINE_SERIALNBR(string cpnyid, string docnbr, string trantype, string refnbr, string lineref, string invtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/GET_LINE_SERIALNBR", ReplyAction="http://tempuri.org/ISnsServices/GET_LINE_SERIALNBRResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> GET_LINE_SERIALNBRAsync(string cpnyid, string docnbr, string trantype, string refnbr, string lineref, string invtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/GET_DO_NUMBER", ReplyAction="http://tempuri.org/ISnsServices/GET_DO_NUMBERResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus GET_DO_NUMBER(string cpnyid, string serialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/GET_DO_NUMBER", ReplyAction="http://tempuri.org/ISnsServices/GET_DO_NUMBERResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> GET_DO_NUMBERAsync(string cpnyid, string serialNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/CREATE_DISASSEMBLY_ORDER_HEADER", ReplyAction="http://tempuri.org/ISnsServices/CREATE_DISASSEMBLY_ORDER_HEADERResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus CREATE_DISASSEMBLY_ORDER_HEADER(string cpnyId, string woNumber, string finishGood, string bomId, string siteFinish, string warehouse, string whselocFinish, string systemId, System.Nullable<int> qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/CREATE_DISASSEMBLY_ORDER_HEADER", ReplyAction="http://tempuri.org/ISnsServices/CREATE_DISASSEMBLY_ORDER_HEADERResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> CREATE_DISASSEMBLY_ORDER_HEADERAsync(string cpnyId, string woNumber, string finishGood, string bomId, string siteFinish, string warehouse, string whselocFinish, string systemId, System.Nullable<int> qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/CREATE_DISASSEMBLY_ORDER_DETAIL", ReplyAction="http://tempuri.org/ISnsServices/CREATE_DISASSEMBLY_ORDER_DETAILResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus CREATE_DISASSEMBLY_ORDER_DETAIL(string cpnyId, string refNumber, string erpLineRef, string invtId, string erpDocRef, decimal lineNbr, string ItemAttribute1, decimal qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/CREATE_DISASSEMBLY_ORDER_DETAIL", ReplyAction="http://tempuri.org/ISnsServices/CREATE_DISASSEMBLY_ORDER_DETAILResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> CREATE_DISASSEMBLY_ORDER_DETAILAsync(string cpnyId, string refNumber, string erpLineRef, string invtId, string erpDocRef, decimal lineNbr, string ItemAttribute1, decimal qty);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_TAC_CODES", ReplyAction="http://tempuri.org/ISnsServices/MD_TAC_CODESResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MD_TAC_CODES(string strxml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_TAC_CODES", ReplyAction="http://tempuri.org/ISnsServices/MD_TAC_CODESResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_TAC_CODESAsync(string strxml);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_TAC_CODE_DELETE", ReplyAction="http://tempuri.org/ISnsServices/MD_TAC_CODE_DELETEResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MD_TAC_CODE_DELETE(string cpnyid, string invtid, string serialstarnbr, string serialendnbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MD_TAC_CODE_DELETE", ReplyAction="http://tempuri.org/ISnsServices/MD_TAC_CODE_DELETEResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_TAC_CODE_DELETEAsync(string cpnyid, string invtid, string serialstarnbr, string serialendnbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/WORK_ORDER_PIX_UPDATE", ReplyAction="http://tempuri.org/ISnsServices/WORK_ORDER_PIX_UPDATEResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus WORK_ORDER_PIX_UPDATE(string xmldata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/WORK_ORDER_PIX_UPDATE", ReplyAction="http://tempuri.org/ISnsServices/WORK_ORDER_PIX_UPDATEResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> WORK_ORDER_PIX_UPDATEAsync(string xmldata);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/SNS_ENTRY_GATE_MH", ReplyAction="http://tempuri.org/ISnsServices/SNS_ENTRY_GATE_MHResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus SNS_ENTRY_GATE_MH(string Module, string KeyID, string SiteID, string Whseloc, string UserID, string CpnyId, string LineRef, string Serials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/SNS_ENTRY_GATE_MH", ReplyAction="http://tempuri.org/ISnsServices/SNS_ENTRY_GATE_MHResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> SNS_ENTRY_GATE_MHAsync(string Module, string KeyID, string SiteID, string Whseloc, string UserID, string CpnyId, string LineRef, string Serials);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/UPDATE_OFFLINE_SERIALIZED_TRANSACTIONS", ReplyAction="http://tempuri.org/ISnsServices/UPDATE_OFFLINE_SERIALIZED_TRANSACTIONSResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus UPDATE_OFFLINE_SERIALIZED_TRANSACTIONS(string strXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/UPDATE_OFFLINE_SERIALIZED_TRANSACTIONS", ReplyAction="http://tempuri.org/ISnsServices/UPDATE_OFFLINE_SERIALIZED_TRANSACTIONSResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> UPDATE_OFFLINE_SERIALIZED_TRANSACTIONSAsync(string strXML);
        
        // CODEGEN: Generating message contract since element name strXML from namespace http://tempuri.org/ is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/GET_SPK_ENQUIRY", ReplyAction="http://tempuri.org/ISnsServices/GET_SPK_ENQUIRYResponse")]
        LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYResponse GET_SPK_ENQUIRY(LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/GET_SPK_ENQUIRY", ReplyAction="http://tempuri.org/ISnsServices/GET_SPK_ENQUIRYResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYResponse> GET_SPK_ENQUIRYAsync(LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/ValidateSerialMask", ReplyAction="http://tempuri.org/ISnsServices/ValidateSerialMaskResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus ValidateSerialMask(string cpnyId, string invtId, string lotSerNo, int tranType, string lPNNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/ValidateSerialMask", ReplyAction="http://tempuri.org/ISnsServices/ValidateSerialMaskResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> ValidateSerialMaskAsync(string cpnyId, string invtId, string lotSerNo, int tranType, string lPNNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/IsSerialized", ReplyAction="http://tempuri.org/ISnsServices/IsSerializedResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus IsSerialized(string cpnyId, string invtId, int tranType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/IsSerialized", ReplyAction="http://tempuri.org/ISnsServices/IsSerializedResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> IsSerializedAsync(string cpnyId, string invtId, int tranType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/UpdateOutboundAttributes", ReplyAction="http://tempuri.org/ISnsServices/UpdateOutboundAttributesResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus UpdateOutboundAttributes(string strXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/UpdateOutboundAttributes", ReplyAction="http://tempuri.org/ISnsServices/UpdateOutboundAttributesResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> UpdateOutboundAttributesAsync(string strXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MHPixUpdate", ReplyAction="http://tempuri.org/ISnsServices/MHPixUpdateResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MHPixUpdate(string strXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MHPixUpdate", ReplyAction="http://tempuri.org/ISnsServices/MHPixUpdateResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MHPixUpdateAsync(string strXML);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/SyncUnWaveSerials", ReplyAction="http://tempuri.org/ISnsServices/SyncUnWaveSerialsResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus SyncUnWaveSerials(string cpnyid, string serials, string docnbr, string lpn, string invtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/SyncUnWaveSerials", ReplyAction="http://tempuri.org/ISnsServices/SyncUnWaveSerialsResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> SyncUnWaveSerialsAsync(string cpnyid, string serials, string docnbr, string lpn, string invtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MHiLPNCreation", ReplyAction="http://tempuri.org/ISnsServices/MHiLPNCreationResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus MHiLPNCreation(string UserID, string ItemName, string ItemAttribute1, string LPNNumber, string InvAdjustmentQty, string[] SerialNbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/MHiLPNCreation", ReplyAction="http://tempuri.org/ISnsServices/MHiLPNCreationResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MHiLPNCreationAsync(string UserID, string ItemName, string ItemAttribute1, string LPNNumber, string InvAdjustmentQty, string[] SerialNbr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/SCIMEIValidation", ReplyAction="http://tempuri.org/ISnsServices/SCIMEIValidationResponse")]
        LikewizeRetailApp.ServiceReference2.SCReturnStatus SCIMEIValidation(string cpnyid, string imei1, string imei2, string invtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/SCIMEIValidation", ReplyAction="http://tempuri.org/ISnsServices/SCIMEIValidationResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.SCReturnStatus> SCIMEIValidationAsync(string cpnyid, string imei1, string imei2, string invtId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/SerialSwapping", ReplyAction="http://tempuri.org/ISnsServices/SerialSwappingResponse")]
        LikewizeRetailApp.ServiceReference2.ReturnStatus SerialSwapping(LikewizeRetailApp.ServiceReference2.SwappingSerials[] SerialDetails);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISnsServices/SerialSwapping", ReplyAction="http://tempuri.org/ISnsServices/SerialSwappingResponse")]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> SerialSwappingAsync(LikewizeRetailApp.ServiceReference2.SwappingSerials[] SerialDetails);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GET_SPK_ENQUIRYRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GET_SPK_ENQUIRY", Namespace="http://tempuri.org/", Order=0)]
        public LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYRequestBody Body;
        
        public GET_SPK_ENQUIRYRequest() {
        }
        
        public GET_SPK_ENQUIRYRequest(LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYRequestBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GET_SPK_ENQUIRYRequestBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public string strXML;
        
        public GET_SPK_ENQUIRYRequestBody() {
        }
        
        public GET_SPK_ENQUIRYRequestBody(string strXML) {
            this.strXML = strXML;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class GET_SPK_ENQUIRYResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Name="GET_SPK_ENQUIRYResponse", Namespace="http://tempuri.org/", Order=0)]
        public LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYResponseBody Body;
        
        public GET_SPK_ENQUIRYResponse() {
        }
        
        public GET_SPK_ENQUIRYResponse(LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYResponseBody Body) {
            this.Body = Body;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace="http://tempuri.org/")]
    public partial class GET_SPK_ENQUIRYResponseBody {
        
        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue=false, Order=0)]
        public System.Xml.Linq.XElement GET_SPK_ENQUIRYResult;
        
        public GET_SPK_ENQUIRYResponseBody() {
        }
        
        public GET_SPK_ENQUIRYResponseBody(System.Xml.Linq.XElement GET_SPK_ENQUIRYResult) {
            this.GET_SPK_ENQUIRYResult = GET_SPK_ENQUIRYResult;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISnsServicesChannel : LikewizeRetailApp.ServiceReference2.ISnsServices, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SnsServicesClient : System.ServiceModel.ClientBase<LikewizeRetailApp.ServiceReference2.ISnsServices>, LikewizeRetailApp.ServiceReference2.ISnsServices {
        
        public SnsServicesClient() {
        }
        
        public SnsServicesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SnsServicesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SnsServicesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SnsServicesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MD_PRODUCT(string cpnyId, string invtId, string descr, string prodclassid, bool serialized, bool serializedIn, bool serializedOut, string upcCode, string serialmask) {
            return base.Channel.MD_PRODUCT(cpnyId, invtId, descr, prodclassid, serialized, serializedIn, serializedOut, upcCode, serialmask);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_PRODUCTAsync(string cpnyId, string invtId, string descr, string prodclassid, bool serialized, bool serializedIn, bool serializedOut, string upcCode, string serialmask) {
            return base.Channel.MD_PRODUCTAsync(cpnyId, invtId, descr, prodclassid, serialized, serializedIn, serializedOut, upcCode, serialmask);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MD_PRODUCT_DELETE(string cpnyId, string invtId) {
            return base.Channel.MD_PRODUCT_DELETE(cpnyId, invtId);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_PRODUCT_DELETEAsync(string cpnyId, string invtId) {
            return base.Channel.MD_PRODUCT_DELETEAsync(cpnyId, invtId);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MD_ITEMGROUP_DELETE(string cpnyId, string prodclassid) {
            return base.Channel.MD_ITEMGROUP_DELETE(cpnyId, prodclassid);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_ITEMGROUP_DELETEAsync(string cpnyId, string prodclassid) {
            return base.Channel.MD_ITEMGROUP_DELETEAsync(cpnyId, prodclassid);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MD_WAREHOUSE_DELETE(string cpnyId, string siteId) {
            return base.Channel.MD_WAREHOUSE_DELETE(cpnyId, siteId);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_WAREHOUSE_DELETEAsync(string cpnyId, string siteId) {
            return base.Channel.MD_WAREHOUSE_DELETEAsync(cpnyId, siteId);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MD_BOM_HEADER(string cpnyId, string bomid, string descr, string finishGood) {
            return base.Channel.MD_BOM_HEADER(cpnyId, bomid, descr, finishGood);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_BOM_HEADERAsync(string cpnyId, string bomid, string descr, string finishGood) {
            return base.Channel.MD_BOM_HEADERAsync(cpnyId, bomid, descr, finishGood);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MD_BOM_DETAIL(string cpnyId, string bomid, string finishGood, decimal lineNbr, string componentId, decimal qty, decimal perseries, long bomRecId) {
            return base.Channel.MD_BOM_DETAIL(cpnyId, bomid, finishGood, lineNbr, componentId, qty, perseries, bomRecId);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_BOM_DETAILAsync(string cpnyId, string bomid, string finishGood, decimal lineNbr, string componentId, decimal qty, decimal perseries, long bomRecId) {
            return base.Channel.MD_BOM_DETAILAsync(cpnyId, bomid, finishGood, lineNbr, componentId, qty, perseries, bomRecId);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MD_BOM_DETAIL_DELETE(string cpnyId, string bomid, string finishGood, decimal lineNbr) {
            return base.Channel.MD_BOM_DETAIL_DELETE(cpnyId, bomid, finishGood, lineNbr);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_BOM_DETAIL_DELETEAsync(string cpnyId, string bomid, string finishGood, decimal lineNbr) {
            return base.Channel.MD_BOM_DETAIL_DELETEAsync(cpnyId, bomid, finishGood, lineNbr);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MD_ITEMGROUP(string cpnyId, string prodClassId, string descr) {
            return base.Channel.MD_ITEMGROUP(cpnyId, prodClassId, descr);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_ITEMGROUPAsync(string cpnyId, string prodClassId, string descr) {
            return base.Channel.MD_ITEMGROUPAsync(cpnyId, prodClassId, descr);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MD_WAREHOUSE(string cpnyId, string erpsiteid, string siteId, string descr) {
            return base.Channel.MD_WAREHOUSE(cpnyId, erpsiteid, siteId, descr);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_WAREHOUSEAsync(string cpnyId, string erpsiteid, string siteId, string descr) {
            return base.Channel.MD_WAREHOUSEAsync(cpnyId, erpsiteid, siteId, descr);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus CREATE_PRODUCTION_ORDER_HEADER(string cpnyId, string woNumber, string finishGood, string bomId, string siteFinish, string warehouse, string whselocFinish, string systemId, System.Nullable<int> qty, string refNbr) {
            return base.Channel.CREATE_PRODUCTION_ORDER_HEADER(cpnyId, woNumber, finishGood, bomId, siteFinish, warehouse, whselocFinish, systemId, qty, refNbr);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> CREATE_PRODUCTION_ORDER_HEADERAsync(string cpnyId, string woNumber, string finishGood, string bomId, string siteFinish, string warehouse, string whselocFinish, string systemId, System.Nullable<int> qty, string refNbr) {
            return base.Channel.CREATE_PRODUCTION_ORDER_HEADERAsync(cpnyId, woNumber, finishGood, bomId, siteFinish, warehouse, whselocFinish, systemId, qty, refNbr);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus CREATE_PRODUCTION_ORDER_DETAIL(string cpnyId, string woNumber, string lotId, string invtId, decimal lineNbr, decimal qty, string bomId, decimal perseries, long bomRecId) {
            return base.Channel.CREATE_PRODUCTION_ORDER_DETAIL(cpnyId, woNumber, lotId, invtId, lineNbr, qty, bomId, perseries, bomRecId);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> CREATE_PRODUCTION_ORDER_DETAILAsync(string cpnyId, string woNumber, string lotId, string invtId, decimal lineNbr, decimal qty, string bomId, decimal perseries, long bomRecId) {
            return base.Channel.CREATE_PRODUCTION_ORDER_DETAILAsync(cpnyId, woNumber, lotId, invtId, lineNbr, qty, bomId, perseries, bomRecId);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus CREATE_PRODUCTION_ORDER_DETAIL_NOBOMRECID(string cpnyId, string woNumber, string lotId, string invtId, decimal lineNbr, decimal qty, string bomId, decimal perseries, long bomRecId) {
            return base.Channel.CREATE_PRODUCTION_ORDER_DETAIL_NOBOMRECID(cpnyId, woNumber, lotId, invtId, lineNbr, qty, bomId, perseries, bomRecId);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> CREATE_PRODUCTION_ORDER_DETAIL_NOBOMRECIDAsync(string cpnyId, string woNumber, string lotId, string invtId, decimal lineNbr, decimal qty, string bomId, decimal perseries, long bomRecId) {
            return base.Channel.CREATE_PRODUCTION_ORDER_DETAIL_NOBOMRECIDAsync(cpnyId, woNumber, lotId, invtId, lineNbr, qty, bomId, perseries, bomRecId);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus DELETE_LINE_SERIALNBR(string cpnyid, string docnbr, string trantype, string refnbr, string lineref, string invtId) {
            return base.Channel.DELETE_LINE_SERIALNBR(cpnyid, docnbr, trantype, refnbr, lineref, invtId);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> DELETE_LINE_SERIALNBRAsync(string cpnyid, string docnbr, string trantype, string refnbr, string lineref, string invtId) {
            return base.Channel.DELETE_LINE_SERIALNBRAsync(cpnyid, docnbr, trantype, refnbr, lineref, invtId);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus VERIFY_LINE(string cpnyid, string docnbr, string trantype, string refnbr, string lineref, string invtId, string siteId, string warehouse, string whseloc, string system, string tositeid, string towarehouse, string towhseloc, decimal qty) {
            return base.Channel.VERIFY_LINE(cpnyid, docnbr, trantype, refnbr, lineref, invtId, siteId, warehouse, whseloc, system, tositeid, towarehouse, towhseloc, qty);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> VERIFY_LINEAsync(string cpnyid, string docnbr, string trantype, string refnbr, string lineref, string invtId, string siteId, string warehouse, string whseloc, string system, string tositeid, string towarehouse, string towhseloc, decimal qty) {
            return base.Channel.VERIFY_LINEAsync(cpnyid, docnbr, trantype, refnbr, lineref, invtId, siteId, warehouse, whseloc, system, tositeid, towarehouse, towhseloc, qty);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus CANCEL_PORcpt(string cpnyid, string docnbr) {
            return base.Channel.CANCEL_PORcpt(cpnyid, docnbr);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> CANCEL_PORcptAsync(string cpnyid, string docnbr) {
            return base.Channel.CANCEL_PORcptAsync(cpnyid, docnbr);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus VERIFY_PORcpt(string cpnyid, string docnbr) {
            return base.Channel.VERIFY_PORcpt(cpnyid, docnbr);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> VERIFY_PORcptAsync(string cpnyid, string docnbr) {
            return base.Channel.VERIFY_PORcptAsync(cpnyid, docnbr);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus POSTED_TRANSACTION(string cpnyid, string docnbr, string trantype) {
            return base.Channel.POSTED_TRANSACTION(cpnyid, docnbr, trantype);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> POSTED_TRANSACTIONAsync(string cpnyid, string docnbr, string trantype) {
            return base.Channel.POSTED_TRANSACTIONAsync(cpnyid, docnbr, trantype);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus VERIFY_QTYTOT(string cpnyid, string docnbr, string trantype, int qty) {
            return base.Channel.VERIFY_QTYTOT(cpnyid, docnbr, trantype, qty);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> VERIFY_QTYTOTAsync(string cpnyid, string docnbr, string trantype, int qty) {
            return base.Channel.VERIFY_QTYTOTAsync(cpnyid, docnbr, trantype, qty);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus InsertTransdetail(
                    string cpnyId, 
                    string tranTypeId, 
                    string docNbr, 
                    string refNbr, 
                    string lineRef, 
                    string invtid, 
                    string siteid, 
                    string warehouse, 
                    string whseloc, 
                    System.Nullable<decimal> qtytot, 
                    System.Nullable<decimal> qty, 
                    string transtatus, 
                    string systemid, 
                    string tositeid, 
                    string towarehouse, 
                    string towhseloc) {
            return base.Channel.InsertTransdetail(cpnyId, tranTypeId, docNbr, refNbr, lineRef, invtid, siteid, warehouse, whseloc, qtytot, qty, transtatus, systemid, tositeid, towarehouse, towhseloc);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> InsertTransdetailAsync(
                    string cpnyId, 
                    string tranTypeId, 
                    string docNbr, 
                    string refNbr, 
                    string lineRef, 
                    string invtid, 
                    string siteid, 
                    string warehouse, 
                    string whseloc, 
                    System.Nullable<decimal> qtytot, 
                    System.Nullable<decimal> qty, 
                    string transtatus, 
                    string systemid, 
                    string tositeid, 
                    string towarehouse, 
                    string towhseloc) {
            return base.Channel.InsertTransdetailAsync(cpnyId, tranTypeId, docNbr, refNbr, lineRef, invtid, siteid, warehouse, whseloc, qtytot, qty, transtatus, systemid, tositeid, towarehouse, towhseloc);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus Validate_Serial_Status(string cpnyId, string invtid, string lotsernbr, string siteid, string whseloc, string trantypeid, string tranbehaviour, System.Nullable<short> invtmult) {
            return base.Channel.Validate_Serial_Status(cpnyId, invtid, lotsernbr, siteid, whseloc, trantypeid, tranbehaviour, invtmult);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> Validate_Serial_StatusAsync(string cpnyId, string invtid, string lotsernbr, string siteid, string whseloc, string trantypeid, string tranbehaviour, System.Nullable<short> invtmult) {
            return base.Channel.Validate_Serial_StatusAsync(cpnyId, invtid, lotsernbr, siteid, whseloc, trantypeid, tranbehaviour, invtmult);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus Sns_Wrk_Rescan(string cpnyId, string batNbrIn, string refNbrIn, string lineRefIn, string invtId, string wrksId) {
            return base.Channel.Sns_Wrk_Rescan(cpnyId, batNbrIn, refNbrIn, lineRefIn, invtId, wrksId);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> Sns_Wrk_RescanAsync(string cpnyId, string batNbrIn, string refNbrIn, string lineRefIn, string invtId, string wrksId) {
            return base.Channel.Sns_Wrk_RescanAsync(cpnyId, batNbrIn, refNbrIn, lineRefIn, invtId, wrksId);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus SNS_Wrk_IN_OUT_INS(
                    string p_cpnyId, 
                    string p_InOutFlagIn, 
                    string p_ModuleIn, 
                    string p_TranTypeIn, 
                    string p_BatNbrIn, 
                    string p_RefNbrIn, 
                    string p_LineRefIn, 
                    string p_InvtIDIn, 
                    string p_LotSerNbrIn, 
                    string p_EntityIDIn, 
                    string p_MstBoxNbrIn, 
                    string p_LotSerNbrAlt1In, 
                    string p_LotSerNbrAlt2In, 
                    string p_LotSerNbrAlt3In, 
                    string p_LotSerNbrAlt4In, 
                    string p_LotSerNbrAlt5In, 
                    string p_LotSerNbrAlt6In, 
                    string p_LotSerNbrAlt7In, 
                    string p_LotSerNbrAlt8In, 
                    string p_LotSerNbrHexIn, 
                    string p_ComputerNameIn, 
                    string p_ScrnNbrIn, 
                    string p_UserIDIn, 
                    System.Nullable<short> p_AccessNbr, 
                    string p_SiteID, 
                    string p_Whseloc, 
                    string p_Pallet, 
                    int p_linenbr, 
                    string p_KitId, 
                    string p_WorkOrder, 
                    string p_MfgrLotSerNbr, 
                    System.Nullable<System.DateTime> P_ExpDate) {
            return base.Channel.SNS_Wrk_IN_OUT_INS(p_cpnyId, p_InOutFlagIn, p_ModuleIn, p_TranTypeIn, p_BatNbrIn, p_RefNbrIn, p_LineRefIn, p_InvtIDIn, p_LotSerNbrIn, p_EntityIDIn, p_MstBoxNbrIn, p_LotSerNbrAlt1In, p_LotSerNbrAlt2In, p_LotSerNbrAlt3In, p_LotSerNbrAlt4In, p_LotSerNbrAlt5In, p_LotSerNbrAlt6In, p_LotSerNbrAlt7In, p_LotSerNbrAlt8In, p_LotSerNbrHexIn, p_ComputerNameIn, p_ScrnNbrIn, p_UserIDIn, p_AccessNbr, p_SiteID, p_Whseloc, p_Pallet, p_linenbr, p_KitId, p_WorkOrder, p_MfgrLotSerNbr, P_ExpDate);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> SNS_Wrk_IN_OUT_INSAsync(
                    string p_cpnyId, 
                    string p_InOutFlagIn, 
                    string p_ModuleIn, 
                    string p_TranTypeIn, 
                    string p_BatNbrIn, 
                    string p_RefNbrIn, 
                    string p_LineRefIn, 
                    string p_InvtIDIn, 
                    string p_LotSerNbrIn, 
                    string p_EntityIDIn, 
                    string p_MstBoxNbrIn, 
                    string p_LotSerNbrAlt1In, 
                    string p_LotSerNbrAlt2In, 
                    string p_LotSerNbrAlt3In, 
                    string p_LotSerNbrAlt4In, 
                    string p_LotSerNbrAlt5In, 
                    string p_LotSerNbrAlt6In, 
                    string p_LotSerNbrAlt7In, 
                    string p_LotSerNbrAlt8In, 
                    string p_LotSerNbrHexIn, 
                    string p_ComputerNameIn, 
                    string p_ScrnNbrIn, 
                    string p_UserIDIn, 
                    System.Nullable<short> p_AccessNbr, 
                    string p_SiteID, 
                    string p_Whseloc, 
                    string p_Pallet, 
                    int p_linenbr, 
                    string p_KitId, 
                    string p_WorkOrder, 
                    string p_MfgrLotSerNbr, 
                    System.Nullable<System.DateTime> P_ExpDate) {
            return base.Channel.SNS_Wrk_IN_OUT_INSAsync(p_cpnyId, p_InOutFlagIn, p_ModuleIn, p_TranTypeIn, p_BatNbrIn, p_RefNbrIn, p_LineRefIn, p_InvtIDIn, p_LotSerNbrIn, p_EntityIDIn, p_MstBoxNbrIn, p_LotSerNbrAlt1In, p_LotSerNbrAlt2In, p_LotSerNbrAlt3In, p_LotSerNbrAlt4In, p_LotSerNbrAlt5In, p_LotSerNbrAlt6In, p_LotSerNbrAlt7In, p_LotSerNbrAlt8In, p_LotSerNbrHexIn, p_ComputerNameIn, p_ScrnNbrIn, p_UserIDIn, p_AccessNbr, p_SiteID, p_Whseloc, p_Pallet, p_linenbr, p_KitId, p_WorkOrder, p_MfgrLotSerNbr, P_ExpDate);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus Sns_Transfer(string cpnyid, string transfer) {
            return base.Channel.Sns_Transfer(cpnyid, transfer);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> Sns_TransferAsync(string cpnyid, string transfer) {
            return base.Channel.Sns_TransferAsync(cpnyid, transfer);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus XBS_SendChangeOfPartNbrReceiptToWarehouse(string cpnyID, string journalID) {
            return base.Channel.XBS_SendChangeOfPartNbrReceiptToWarehouse(cpnyID, journalID);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> XBS_SendChangeOfPartNbrReceiptToWarehouseAsync(string cpnyID, string journalID) {
            return base.Channel.XBS_SendChangeOfPartNbrReceiptToWarehouseAsync(cpnyID, journalID);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus GET_TRANPERWAREHOUSE(string cpnyid, string trantypeid, string siteid) {
            return base.Channel.GET_TRANPERWAREHOUSE(cpnyid, trantypeid, siteid);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> GET_TRANPERWAREHOUSEAsync(string cpnyid, string trantypeid, string siteid) {
            return base.Channel.GET_TRANPERWAREHOUSEAsync(cpnyid, trantypeid, siteid);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus GET_LINE_SERIALNBR(string cpnyid, string docnbr, string trantype, string refnbr, string lineref, string invtId) {
            return base.Channel.GET_LINE_SERIALNBR(cpnyid, docnbr, trantype, refnbr, lineref, invtId);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> GET_LINE_SERIALNBRAsync(string cpnyid, string docnbr, string trantype, string refnbr, string lineref, string invtId) {
            return base.Channel.GET_LINE_SERIALNBRAsync(cpnyid, docnbr, trantype, refnbr, lineref, invtId);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus GET_DO_NUMBER(string cpnyid, string serialNumber) {
            return base.Channel.GET_DO_NUMBER(cpnyid, serialNumber);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> GET_DO_NUMBERAsync(string cpnyid, string serialNumber) {
            return base.Channel.GET_DO_NUMBERAsync(cpnyid, serialNumber);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus CREATE_DISASSEMBLY_ORDER_HEADER(string cpnyId, string woNumber, string finishGood, string bomId, string siteFinish, string warehouse, string whselocFinish, string systemId, System.Nullable<int> qty) {
            return base.Channel.CREATE_DISASSEMBLY_ORDER_HEADER(cpnyId, woNumber, finishGood, bomId, siteFinish, warehouse, whselocFinish, systemId, qty);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> CREATE_DISASSEMBLY_ORDER_HEADERAsync(string cpnyId, string woNumber, string finishGood, string bomId, string siteFinish, string warehouse, string whselocFinish, string systemId, System.Nullable<int> qty) {
            return base.Channel.CREATE_DISASSEMBLY_ORDER_HEADERAsync(cpnyId, woNumber, finishGood, bomId, siteFinish, warehouse, whselocFinish, systemId, qty);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus CREATE_DISASSEMBLY_ORDER_DETAIL(string cpnyId, string refNumber, string erpLineRef, string invtId, string erpDocRef, decimal lineNbr, string ItemAttribute1, decimal qty) {
            return base.Channel.CREATE_DISASSEMBLY_ORDER_DETAIL(cpnyId, refNumber, erpLineRef, invtId, erpDocRef, lineNbr, ItemAttribute1, qty);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> CREATE_DISASSEMBLY_ORDER_DETAILAsync(string cpnyId, string refNumber, string erpLineRef, string invtId, string erpDocRef, decimal lineNbr, string ItemAttribute1, decimal qty) {
            return base.Channel.CREATE_DISASSEMBLY_ORDER_DETAILAsync(cpnyId, refNumber, erpLineRef, invtId, erpDocRef, lineNbr, ItemAttribute1, qty);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MD_TAC_CODES(string strxml) {
            return base.Channel.MD_TAC_CODES(strxml);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_TAC_CODESAsync(string strxml) {
            return base.Channel.MD_TAC_CODESAsync(strxml);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MD_TAC_CODE_DELETE(string cpnyid, string invtid, string serialstarnbr, string serialendnbr) {
            return base.Channel.MD_TAC_CODE_DELETE(cpnyid, invtid, serialstarnbr, serialendnbr);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MD_TAC_CODE_DELETEAsync(string cpnyid, string invtid, string serialstarnbr, string serialendnbr) {
            return base.Channel.MD_TAC_CODE_DELETEAsync(cpnyid, invtid, serialstarnbr, serialendnbr);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus WORK_ORDER_PIX_UPDATE(string xmldata) {
            return base.Channel.WORK_ORDER_PIX_UPDATE(xmldata);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> WORK_ORDER_PIX_UPDATEAsync(string xmldata) {
            return base.Channel.WORK_ORDER_PIX_UPDATEAsync(xmldata);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus SNS_ENTRY_GATE_MH(string Module, string KeyID, string SiteID, string Whseloc, string UserID, string CpnyId, string LineRef, string Serials) {
            return base.Channel.SNS_ENTRY_GATE_MH(Module, KeyID, SiteID, Whseloc, UserID, CpnyId, LineRef, Serials);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> SNS_ENTRY_GATE_MHAsync(string Module, string KeyID, string SiteID, string Whseloc, string UserID, string CpnyId, string LineRef, string Serials) {
            return base.Channel.SNS_ENTRY_GATE_MHAsync(Module, KeyID, SiteID, Whseloc, UserID, CpnyId, LineRef, Serials);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus UPDATE_OFFLINE_SERIALIZED_TRANSACTIONS(string strXML) {
            return base.Channel.UPDATE_OFFLINE_SERIALIZED_TRANSACTIONS(strXML);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> UPDATE_OFFLINE_SERIALIZED_TRANSACTIONSAsync(string strXML) {
            return base.Channel.UPDATE_OFFLINE_SERIALIZED_TRANSACTIONSAsync(strXML);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYResponse LikewizeRetailApp.ServiceReference2.ISnsServices.GET_SPK_ENQUIRY(LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYRequest request) {
            return base.Channel.GET_SPK_ENQUIRY(request);
        }
        
        public System.Xml.Linq.XElement GET_SPK_ENQUIRY(string strXML) {
            LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYRequest inValue = new LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYRequest();
            inValue.Body = new LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYRequestBody();
            inValue.Body.strXML = strXML;
            LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYResponse retVal = ((LikewizeRetailApp.ServiceReference2.ISnsServices)(this)).GET_SPK_ENQUIRY(inValue);
            return retVal.Body.GET_SPK_ENQUIRYResult;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYResponse> LikewizeRetailApp.ServiceReference2.ISnsServices.GET_SPK_ENQUIRYAsync(LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYRequest request) {
            return base.Channel.GET_SPK_ENQUIRYAsync(request);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYResponse> GET_SPK_ENQUIRYAsync(string strXML) {
            LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYRequest inValue = new LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYRequest();
            inValue.Body = new LikewizeRetailApp.ServiceReference2.GET_SPK_ENQUIRYRequestBody();
            inValue.Body.strXML = strXML;
            return ((LikewizeRetailApp.ServiceReference2.ISnsServices)(this)).GET_SPK_ENQUIRYAsync(inValue);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus ValidateSerialMask(string cpnyId, string invtId, string lotSerNo, int tranType, string lPNNo) {
            return base.Channel.ValidateSerialMask(cpnyId, invtId, lotSerNo, tranType, lPNNo);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> ValidateSerialMaskAsync(string cpnyId, string invtId, string lotSerNo, int tranType, string lPNNo) {
            return base.Channel.ValidateSerialMaskAsync(cpnyId, invtId, lotSerNo, tranType, lPNNo);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus IsSerialized(string cpnyId, string invtId, int tranType) {
            return base.Channel.IsSerialized(cpnyId, invtId, tranType);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> IsSerializedAsync(string cpnyId, string invtId, int tranType) {
            return base.Channel.IsSerializedAsync(cpnyId, invtId, tranType);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus UpdateOutboundAttributes(string strXML) {
            return base.Channel.UpdateOutboundAttributes(strXML);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> UpdateOutboundAttributesAsync(string strXML) {
            return base.Channel.UpdateOutboundAttributesAsync(strXML);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MHPixUpdate(string strXML) {
            return base.Channel.MHPixUpdate(strXML);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MHPixUpdateAsync(string strXML) {
            return base.Channel.MHPixUpdateAsync(strXML);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus SyncUnWaveSerials(string cpnyid, string serials, string docnbr, string lpn, string invtId) {
            return base.Channel.SyncUnWaveSerials(cpnyid, serials, docnbr, lpn, invtId);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> SyncUnWaveSerialsAsync(string cpnyid, string serials, string docnbr, string lpn, string invtId) {
            return base.Channel.SyncUnWaveSerialsAsync(cpnyid, serials, docnbr, lpn, invtId);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus MHiLPNCreation(string UserID, string ItemName, string ItemAttribute1, string LPNNumber, string InvAdjustmentQty, string[] SerialNbr) {
            return base.Channel.MHiLPNCreation(UserID, ItemName, ItemAttribute1, LPNNumber, InvAdjustmentQty, SerialNbr);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> MHiLPNCreationAsync(string UserID, string ItemName, string ItemAttribute1, string LPNNumber, string InvAdjustmentQty, string[] SerialNbr) {
            return base.Channel.MHiLPNCreationAsync(UserID, ItemName, ItemAttribute1, LPNNumber, InvAdjustmentQty, SerialNbr);
        }
        
        public LikewizeRetailApp.ServiceReference2.SCReturnStatus SCIMEIValidation(string cpnyid, string imei1, string imei2, string invtId) {
            return base.Channel.SCIMEIValidation(cpnyid, imei1, imei2, invtId);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.SCReturnStatus> SCIMEIValidationAsync(string cpnyid, string imei1, string imei2, string invtId) {
            return base.Channel.SCIMEIValidationAsync(cpnyid, imei1, imei2, invtId);
        }
        
        public LikewizeRetailApp.ServiceReference2.ReturnStatus SerialSwapping(LikewizeRetailApp.ServiceReference2.SwappingSerials[] SerialDetails) {
            return base.Channel.SerialSwapping(SerialDetails);
        }
        
        public System.Threading.Tasks.Task<LikewizeRetailApp.ServiceReference2.ReturnStatus> SerialSwappingAsync(LikewizeRetailApp.ServiceReference2.SwappingSerials[] SerialDetails) {
            return base.Channel.SerialSwappingAsync(SerialDetails);
        }
    }
}
