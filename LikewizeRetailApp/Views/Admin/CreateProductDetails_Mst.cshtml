@model LikewizeRetailApp.Models.ProductDetails
@{
    ViewBag.Title = "CreateProductDetails_Mst";
}
@*@{
        Layout = "~/Views/Shared/_LayoutPage1.cshtml";
    }*@

@*@{
    Layout = null;
}*@
<h2>Create Product Details</h2>
<hr />

@*<script src="~/Scripts/Custom.js"></script>*@

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
        $(document).ready(function () {
            $("#ProductType").change( function () {


                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetBrand","ReceivingOperations")',
                    data: { prodType: $("#ProductType").val() },
                    success: function (data) {
                        $("#Brand").empty();
                        $.each(data, function (i, brand) {
                            $("#Brand").append('<option value="' + brand.Value + '" > ' + brand.Text + '</option>')
                        })
                    }
                })
            })
        })
    </script>

<script>
    function PageValidation() {
        var prod = $("#ProductType").val();
        var brand = $("#Brand").val();
        var model = $("#Model").val();
        var message = $("#spanmsg");
        var message1 = $("#spanmsg1");
        console.log(prod);
        if (brand == "") {
            message.html("Please select a valid brand");
            message.css("color", "red");
        }
        if (model == "") {
            message1.html("Please enter the model name");
            message1.css("color", "red");
        }
        if (prod == null) {
            return false;
        }
        if (brand == null) {
            return false;
        }
        if (model == null || model == "" || prod == "" || brand=="") {
            return false;
        }
        else {
            return true;
        }
    }

    function CheckModel() {
        var model1 = $("#Model").val();
        $.ajax({
            type: 'POST',
            url: '@Url.Action("CheckModel","Admin")',
            data: { model: model1 },
            success: function (Count) {
                var message = $("#spanmsg1");
                if (Count == "Yes") {
                    message.html("This model already exists");
                    message.css("color", "red");
                }
                else {
                    message.html("Valid model");
                    message.css("color", "green");
                }
            }
        })
    }
</script>


    @*<script>
        $(document).ready(function () {
            $("#Brand").change(function () {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("GetModel", "ReceivingOperations")',
                    data: { prodType: $("#ProductType").val(), brand: $("#Brand").val() },
                    success: function (data) {
                        $("#Model").empty();
                        $.each(data, function (i, model) {
                            $("#Model").append('<option value="' + model.Value + '" > ' + model.Text + '</option>')
                        })
                    }
                })
            })
        })
    </script>*@

@using (Html.BeginForm("CreateProductDetails_Mst", "Admin", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ProductDetailsID)




        <div class="form-group">
            @*@Html.LabelFor(model => model.ProductType, htmlAttributes: new { @class = "control-label col-md-2" })*@
            <label class="control-label col-md-2"><b>Product Type</b></label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.ProductType, ViewBag.ProductTypeList as List<SelectListItem>, "-select-", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ProductType, "", new { @class = "text-danger" })
            </div>
        </div>




        <div class="form-group">
            @Html.LabelFor(model => model.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.Brand, new SelectList(ViewBag.BrandList, "Value", "Text"), "-select-", new { @class = "form-control" })*@

                @Html.DropDownListFor(model => model.Brand, new SelectList(string.Empty, "Value", "Text"), "-select-", new { @class = "form-control"  })
                @*@Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                <span id="spanmsg"></span>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.Model, new SelectList(string.Empty, "Value", "Text"), "-select-", new { @class = "form-control" })*@
                @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" , @onkeyup = "CheckModel()"} })
                @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
                <span id="spanmsg1"></span>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" onclick="return PageValidation();" />
            </div>
        </div>

    </div>

}

